// MARK: - AutoCaseCheckable for Enums
{% for type in types.implementing.AutoCaseCheckable|enum %}
// MARK: - {{ type.name }} AutoCaseCheckable
extension {{ type.name }} {
    {% for case in type.cases %}
    func is{{ case.name|upperFirstLetter }}() -> Bool {
        {% ifnot case.hasAssociatedValue %}
        if case .{{ case.name }} = self {
            return true
        }
        else {
            return false
        }
        {% else %}
        if case .{{ case.name }}({% for associatedValue in case.associatedValues %}_{% if not forloop.last %},{% endif %}{% endfor %}) = self {
            return true
        }
        else {
            return false
        }
        {% endif %}
    }
    func isNot{{ case.name|upperFirstLetter }}() -> Bool {
        return !self.is{{ case.name|upperFirstLetter }}()
    }
    static func is{{ case.name|upperFirstLetter }}(_ `case`: {{ type.name }}) -> Bool {
        return `case`.is{{ case.name|upperFirstLetter }}()
    }
    static func isNot{{ case.name|upperFirstLetter }}(_ `case`: {{ type.name }}) -> Bool {
        return !`case`.is{{ case.name|upperFirstLetter }}()
    }
    {% endfor %}
}
{% endfor %}
